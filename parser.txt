( self: Sentence None, father: None, left: None, right: None )
( self: Package None, father: Sentence, left: None, right: Import )
( self: package None, father: Package, left: None, right: test )
( self: test None, father: Package, left: package, right: None )
( self: Import None, father: Sentence, left: Package, right: ClassStatement )
( self: import None, father: Import, left: None, right: java.lang.* )
( self: java.lang.* None, father: Import, left: import, right: None )
( self: ClassStatement None, father: Sentence, left: Import, right: FunctionStatement )
( self: Adjective None, father: ClassStatement, left: None, right: ClassName )
( self: public ADJECTIVE_TYPE, father: Adjective, left: None, right: None )
( self: ClassName None, father: ClassStatement, left: Adjective, right: Sentence )
( self: HelloWorld ClassName, father: ClassName, left: None, right: None )
( self: Sentence None, father: ClassStatement, left: ClassName, right: None )
( self: FunctionStatement None, father: Sentence, left: ClassStatement, right: None )
( self: Adjective None, father: FunctionStatement, left: None, right: Type )
( self: public ADJECTIVE_TYPE, father: Adjective, left: None, right: None )
( self: Adjective None, father: public, left: None, right: None )
( self: static ADJECTIVE_TYPE, father: Adjective, left: None, right: None )
( self: Type None, father: FunctionStatement, left: Adjective, right: FunctionName )
( self: void FIELD_TYPE, father: Type, left: None, right: None )
( self: FunctionName None, father: FunctionStatement, left: Type, right: StateParameterList )
( self: main IDENTIFIER, father: FunctionName, left: None, right: None )
( self: StateParameterList None, father: FunctionStatement, left: FunctionName, right: Sentence )
( self: Sentence None, father: FunctionStatement, left: StateParameterList, right: None )
( self: Statement None, father: Sentence, left: None, right: Statement )
( self: Adjective None, father: Statement, left: None, right: private )
( self: private ADJECTIVE_TYPE, father: Statement, left: Adjective, right: Type )
( self: Type None, father: Statement, left: private, right: i )
( self: int FIELD_TYPE, father: Type, left: None, right: None )
( self: i IDENTIFIER, father: Statement, left: Type, right: None )
( self: Statement None, father: Sentence, left: Statement, right: Statement )
( self: Type None, father: Statement, left: None, right: score )
( self: int FIELD_TYPE, father: Type, left: None, right: None )
( self: score IDENTIFIER, father: Statement, left: Type, right: 6 )
( self: 6 DIGIT_CONSTANT, father: Statement, left: score, right: ConstantList )
( self: ConstantList None, father: Statement, left: 6, right: None )
( self: 76 DIGIT_CONSTANT, father: ConstantList, left: None, right: 82 )
( self: 82 DIGIT_CONSTANT, father: ConstantList, left: 76, right: 90 )
( self: 90 DIGIT_CONSTANT, father: ConstantList, left: 82, right: 86 )
( self: 86 DIGIT_CONSTANT, father: ConstantList, left: 90, right: 79 )
( self: 79 DIGIT_CONSTANT, father: ConstantList, left: 86, right: 62 )
( self: 62 DIGIT_CONSTANT, father: ConstantList, left: 79, right: None )
( self: Statement None, father: Sentence, left: Statement, right: Statement )
( self: Type None, father: Statement, left: None, right: stu_number )
( self: int FIELD_TYPE, father: Type, left: None, right: None )
( self: stu_number IDENTIFIER, father: Statement, left: Type, right: None )
( self: Statement None, father: Sentence, left: Statement, right: Statement )
( self: Type None, father: Statement, left: None, right: sum )
( self: float FIELD_TYPE, father: Type, left: None, right: None )
( self: sum IDENTIFIER, father: Statement, left: Type, right: None )
( self: Statement None, father: Sentence, left: Statement, right: Assignment )
( self: Type None, father: Statement, left: None, right: mean )
( self: float FIELD_TYPE, father: Type, left: None, right: None )
( self: mean IDENTIFIER, father: Statement, left: Type, right: None )
( self: Assignment None, father: Sentence, left: Statement, right: Control )
( self: sum IDENTIFIER, father: Assignment, left: None, right: Expression )
( self: Expression Constant, father: Assignment, left: sum, right: None )
( self: 0 _Constant, father: Expression, left: None, right: None )
( self: Control ForControl, father: Sentence, left: Assignment, right: Control )
( self: Assignment None, father: Control, left: None, right: Expression )
( self: i IDENTIFIER, father: Assignment, left: None, right: Expression )
( self: Expression Constant, father: Assignment, left: i, right: None )
( self: 0 _Constant, father: Expression, left: None, right: None )
( self: Expression DoubleOperand, father: Control, left: Assignment, right: Sentence )
( self: Expression Variable, father: Expression, left: None, right: Operator )
( self: i _Variable, father: Expression, left: None, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: < _Operator, father: Operator, left: None, right: None )
( self: Expression Constant, father: Expression, left: Operator, right: None )
( self: 6 _Constant, father: Expression, left: None, right: None )
( self: Sentence None, father: Control, left: Expression, right: Expression )
( self: Assignment None, father: Sentence, left: None, right: Assignment )
( self: sum IDENTIFIER, father: Assignment, left: None, right: Expression )
( self: Expression DoubleOperand, father: Assignment, left: sum, right: None )
( self: Expression Variable, father: Expression, left: None, right: Operator )
( self: sum _Variable, father: Expression, left: None, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: + _Operator, father: Operator, left: None, right: None )
( self: Expression DoubleOperand, father: Expression, left: Operator, right: None )
( self: Expression ArrayItem, father: Expression, left: None, right: Operator )
( self: score _ArrayName, father: Expression, left: None, right: i )
( self: i _ArrayIndex, father: Expression, left: score, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: * _Operator, father: Operator, left: None, right: None )
( self: Expression ArrayItem, father: Expression, left: Operator, right: None )
( self: credit _ArrayName, father: Expression, left: None, right: i )
( self: i _ArrayIndex, father: Expression, left: credit, right: None )
( self: Assignment None, father: Sentence, left: Assignment, right: None )
( self: temp IDENTIFIER, father: Assignment, left: None, right: Expression )
( self: Expression DoubleOperand, father: Assignment, left: temp, right: None )
( self: Expression Variable, father: Expression, left: None, right: Operator )
( self: temp _Variable, father: Expression, left: None, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: + _Operator, father: Operator, left: None, right: None )
( self: Expression ArrayItem, father: Expression, left: Operator, right: None )
( self: credit _ArrayName, father: Expression, left: None, right: i )
( self: i _ArrayIndex, father: Expression, left: credit, right: None )
( self: Expression SingleOperand, father: Control, left: Sentence, right: None )
( self: Operator Operator, father: Expression, left: None, right: Expression )
( self: ++ _Operator, father: Operator, left: None, right: None )
( self: Expression Variable, father: Expression, left: Operator, right: None )
( self: i _Variable, father: Expression, left: None, right: None )
( self: Control IfElseControl, father: Sentence, left: Control, right: FunctionCall )
( self: IfControl None, father: Control, left: None, right: ElseControl )
( self: Expression DoubleOperand, father: IfControl, left: None, right: Sentence )
( self: Expression Variable, father: Expression, left: None, right: Operator )
( self: mean _Variable, father: Expression, left: None, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: >= _Operator, father: Operator, left: None, right: None )
( self: Expression Constant, father: Expression, left: Operator, right: None )
( self: 60 _Constant, father: Expression, left: None, right: None )
( self: Sentence None, father: IfControl, left: Expression, right: None )
( self: Assignment None, father: Sentence, left: None, right: None )
( self: mean IDENTIFIER, father: Assignment, left: None, right: Expression )
( self: Expression DoubleOperand, father: Assignment, left: mean, right: None )
( self: Expression Variable, father: Expression, left: None, right: Operator )
( self: mean _Variable, father: Expression, left: None, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: - _Operator, father: Operator, left: None, right: None )
( self: Expression Constant, father: Expression, left: Operator, right: None )
( self: 60 _Constant, father: Expression, left: None, right: None )
( self: ElseControl None, father: Control, left: IfControl, right: None )
( self: Sentence None, father: ElseControl, left: None, right: None )
( self: Assignment None, father: Sentence, left: None, right: None )
( self: mean IDENTIFIER, father: Assignment, left: None, right: Expression )
( self: Expression DoubleOperand, father: Assignment, left: mean, right: None )
( self: Expression Constant, father: Expression, left: None, right: Operator )
( self: 60 _Constant, father: Expression, left: None, right: None )
( self: Operator Operator, father: Expression, left: Expression, right: Expression )
( self: - _Operator, father: Operator, left: None, right: None )
( self: Expression Variable, father: Expression, left: Operator, right: None )
( self: mean _Variable, father: Expression, left: None, right: None )
( self: FunctionCall None, father: Sentence, left: Control, right: None )
( self: System.out.println FUNCTION_NAME, father: FunctionCall, left: None, right: CallParameterList )
( self: CallParameterList None, father: FunctionCall, left: System.out.println, right: None )
( self: HelloWorld! STRING_CONSTANT, father: CallParameterList, left: None, right: None )
